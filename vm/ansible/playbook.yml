---
 - hosts: all

   #become_user: vagrant
   #become: yes

   vars:
     useComposer: true

   handlers:

   - name: restart iptables
     service: name=iptables state=restarted

   - name: restart apache
     service: name=apache2 state=restarted

   pre_tasks:
   - name: 'install python3'
     apt: pkg={{ item }} state=installed
     with_items:
        - python3

   tasks: 

   - debug: msg="start"

   - name: updating apt-get packages
     apt: 
      update_cache: yes

   - name: be sure libselinux-python and selinux policy utils are installed
     apt: pkg={{ item }} state=installed
     with_items:
        - libselinux1
        - policykit-1
        - policycoreutils
        # - libselinux-python
        # - policycoreutils-python

   - name: copy custom selinux policy httpvboxpolicy to allow apache to access synched virtualbox/vagrant folder
     copy: src=templates/selinux/httpvboxpolicy.pp dest=/tmp/httpvboxpolicy.pp 

   - name: install custom selinux policy httpvboxpolicy to allow apache to access synched virtualbox/vagrant folder
     command: /usr/sbin/semodule -i /tmp/httpvboxpolicy.pp
     become: yes
     become_user: vagrant

   - name: copy firewall template
     copy: src=templates/etc/sysconfig/iptables dest=/sbin/iptables owner=root group=root mode=0600
     notify: restart iptables
     become: yes
     become_user: vagrant

   - name: gettext
     apt: pkg={{ item }} state=installed
     with_items:
        - gettext

   - name: Install http and php etc
     apt: pkg={{ item }} state=installed
     with_items:
        - apache2
        - php5
        - php5-mcrypt
        - php5-pgsql
        - php5-gd
        - php5-tidy
        - php-pear
     become: yes
     become_user: vagrant

   # httpd.conf update necessary to address vagrant/virtualbox issue so changes to synched folder static html files work 
   # - name: Set 'EnableSendfile off' in Apache2 httpd.conf 
   #   lineinfile: dest=/etc/httpd/conf/httpd.conf regexp="^EnableSendfile off" insertafter="^#EnableSendfile " line="EnableSendfile off"

   - name: Ensure Apache running
     service: name=apache2 state=started enabled=yes
     become: yes
     become_user: vagrant

   - name: Copy Apache vhost config file for default web pages 
     copy: src=templates/etc/httpd/conf.d/15-default.conf dest=/etc/apache2/conf-available/15-default.conf
     notify: restart apache
     become: yes
     become_user: vagrant

   - name: Copy gettext.ini file 
     copy: src=templates/etc/php.d/gettext.ini dest=/etc/php5/apache2/conf.d/gettext.ini
     notify: restart apache
     become: yes
     become_user: vagrant

   - name: Create application log directory
     file: path=/var/log/humanface state=directory owner=www-data group=www-data

   - name: Set application log file permissions
     file: path=/var/log/humanface/humanface.log state=touch owner=www-data group=www-data

   - name: Install git
     apt: pkg=git state=installed
     become: yes
     become_user: vagrant

   # - name: install composer
   #   shell: >
   #       curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin
   #   when: "useComposer == true"

   # - name: move composer.phar to /usr/local/bin/composer
   #   shell: >
   #      mv /usr/local/bin/composer.phar /usr/local/bin/composer
   #   when: "useComposer == true"

   # Install python tools for ArcGIS online processing
   # - name: Install python
   #   yum: pkg={{ item }} state=installed 
   #   with_items:
   #      - python
   #      - python-devel
   #      - python-pip

   # - name: Install python 3rd-party modules
   #   pip: requirements=/opt/scripts/agol-integration/requirements.txt
